@model Shad_BookingApplication.Models.AspNetService
@{
    ViewBag.Title = "AddService";
    Layout = "~/Views/Shared/_CompanyAdminNavigationBar.cshtml";

    List<SelectListItem> listItems0 = new List<SelectListItem>();

    if (ViewBag.tax_list != null)
    {
        foreach (var item in ViewBag.tax_list)
        {
            listItems0.Add(new SelectListItem
            {
                Text = item.Name,
                Value = item.Id.ToString(),
                Selected = false
            });
        }
    }



    List<SelectListItem> listItems3 = new List<SelectListItem>();

    if (ViewBag.service_group__list != null)
    {
        foreach (var item in ViewBag.service_group__list)
        {
            listItems3.Add(new SelectListItem
            {
                Text = item.Name,
                Value = item.Id.ToString(),
                Selected = false
            });
        }
    }

    List<SelectListItem> listItems2 = new List<SelectListItem>();

    listItems2.Add(new SelectListItem
    {
        Text = "Active",
        Value = "Active",
        Selected = true
    });

    listItems2.Add(new SelectListItem
    {
        Text = "Inactive",
        Value = "Inactive",
        Selected = false
    });


    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "10 Minutes",
        Value = "10 Minutes",
        Selected = false
    });
    listItems.Add(new SelectListItem
    {
        Text = "20 Minutes",
        Value = "20 Minutes",
        Selected = false
    });
    listItems.Add(new SelectListItem
    {
        Text = "30 Minutes",
        Value = "30 Minutes",
        Selected = false
    });
    listItems.Add(new SelectListItem
    {
        Text = "40 Minutes",
        Value = "40 Minutes",
        Selected = false
    });
    listItems.Add(new SelectListItem
    {
        Text = "50 Minutes",
        Value = "50 Minutes",
        Selected = false
    });
    listItems.Add(new SelectListItem
    {
        Text = "60 Minutes",
        Value = "60 Minutes",
        Selected = false
    });

    List<SelectListItem> listItems1 = new List<SelectListItem>();
    listItems1.Add(new SelectListItem
    {
        Text = "15 Minutes",
        Value = "15 Minutes",
        Selected = false
    });
    listItems1.Add(new SelectListItem
    {
        Text = "30 Minutes",
        Value = "30 Minutes",
        Selected = false
    });
    listItems1.Add(new SelectListItem
    {
        Text = "45 Minutes",
        Value = "45 Minutes",
        Selected = false
    });

    listItems1.Add(new SelectListItem
    {
        Text = "60 Minutes",
        Value = "60 Minutes",
        Selected = false
    });



}



        < !-- Start: Content-Wrapper -->
<section id="content_wrapper">

    <!-- Start: Topbar-Dropdown -->
    <div id="topbar-dropmenu">
        <div class="topbar-menu row">
            <div class="col-xs-4 col-sm-2">
                <a href="#" class="metro-tile">
                    <span class="metro-icon glyphicon glyphicon-inbox"></span>
                    <p class="metro-title">Messages</p>
                </a>
            </div>
            <div class="col-xs-4 col-sm-2">
                <a href="#" class="metro-tile">
                    <span class="metro-icon glyphicon glyphicon-user"></span>
                    <p class="metro-title">Users</p>
                </a>
            </div>
            <div class="col-xs-4 col-sm-2">
                <a href="#" class="metro-tile">
                    <span class="metro-icon glyphicon glyphicon-headphones"></span>
                    <p class="metro-title">Support</p>
                </a>
            </div>
            <div class="col-xs-4 col-sm-2">
                <a href="#" class="metro-tile">
                    <span class="metro-icon fa fa-gears"></span>
                    <p class="metro-title">Settings</p>
                </a>
            </div>
            <div class="col-xs-4 col-sm-2">
                <a href="#" class="metro-tile">
                    <span class="metro-icon glyphicon glyphicon-facetime-video"></span>
                    <p class="metro-title">Videos</p>
                </a>
            </div>
            <div class="col-xs-4 col-sm-2">
                <a href="#" class="metro-tile">
                    <span class="metro-icon glyphicon glyphicon-picture"></span>
                    <p class="metro-title">Pictures</p>
                </a>
            </div>
        </div>
    </div>
    <!-- End: Topbar-Dropdown -->

    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <h4>CHoose csv format file </h4>
            <input type="file" name="fileinput" accept=".csv"> </input>
            <br><br>

            <center><button type="button" class="btn btn-primary">Done</button></center>
        </div>

    </div>

    <!-- Start: Topbar -->
    <header id="topbar">
        <div class="topbar-left">
            <ol class="breadcrumb">
                <h2>Add Service</h2>
            </ol>

        </div>


    </header>
    <!-- End: Topbar -->
    <!-- Begin: Content -->
@using (Html.BeginForm("AddService", "CompanyAdmin", FormMethod.Post))
{
    <section id="content" class="table-layout">
        <!-- Start: Header -->
        <!-- End: Header -->

        <div class="panel">
            <div class="panel" id="spy3">

                <div style="margin-left: 2%">
                    <div class="row">
                        <div class="row form-group">
                            <h4 class="col-md-3 col-xs-12 text-left">Service Details</h4>
                        </div>
                        <div class="row form-group required">
                            <label class="col-md-2 col-xs-12 text-center control-label">Service Name:</label>
                            <div class="col-md-8 col-xs-11">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="row form-group required">
                            <label class="col-md-2 col-xs-12 text-center control-label">Service Group:</label>
                            <div class="col-md-7 col-xs-8">
                                @Html.DropDownList("None",listItems3, new { @class = "form-control", @required = "required" })
                               


                            @*</div>
                            <% using(Html.BeginForm("AddServiceGroup", "CompanyAdmin")) { %>
                            <input type="submit" class="btn btn-danger col-md-1 col-xs-3"  style="border-radius:3px; margin-left: -10px" value="+" />
                            <% } %>*@

                               

                           @*<button class="btn btn-danger col-md-1 col-xs-3"  style="border-radius:3px; margin-left: -10px">+@("AddServiceGroup")</button>
                            <span class="btn btn-danger col-md-1 col-xs-3"  style="border-radius:3px; margin-left: -10px">@Html.ActionLink("+", "AddServiceGroup")</span>*@

                        </div>
                        <div class="row form-group">
                            <label class="col-md-2 col-xs-12 text-center">Description:</label>
                            <div class="col-md-8 col-xs-11">

                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "", style = "resize: none;", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group ">
                            <div class="checkbox col-md-offset-2 col-xs-offset-1">
                                <label style="margin-left: 1%">
                                <input id="chk_box_on_id"  type="checkbox" checked="" onchange="bookonline()" value="1"/>Customers can book this service online</label>
                               
                                @Html.HiddenFor(model => model.IsBookOnline, new { @id = "bookonline_id" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="row form-group">
                            <label class="col-md-2 col-xs-12 text-center">Price:</label>
                            <div class="col-md-3 col-xs-12">
                                <div class="input-group">
                                    <span class="input-group-addon">&euro;</span>
                                   
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @type = "number", @min = "0", @step = "1", @value = "0", @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                                </div>
                            </div>
                            <label class="col-md-1 col-md-offset-1 col-xs-12 text-center control-label">Tax:</label>
                            <div class="col-md-3 col-xs-12">
                                 @Html.DropDownListFor(model => model.TaxId, listItems0, "-Taux-", new { @class = "form-control", @required = "required", @id = "tax", @style = "margin-bottom: 3%;" })
                                @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
                                
                            </div>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-2 col-xs-12 text-center">Duration:</label>
                            <div class="col-md-8 col-xs-8">
                                @Html.DropDownListFor(model => model.Duration, listItems, "--Minutes--", new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })




                            </div>
                        </div>
                    </div>
                    <div style="background-color: #eff0f2; height:2px; width:96%; margin-left: 2%; margin-bottom: 2%;"> </div>
                    <div class="row">
                        <div class="row form-group">
                            <label class="col-md-2 col-xs-12">Padding and Processing times:</label>
                            <div class="col-md-10 col-xs-12">
                                <div class="input-group">
                                    Padding time will block out additional time in your calendar.
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-2 col-md-offset-2 col-xs-12 text-left">Padding before:</label>
                            <div class="col-md-6 col-xs-8">
                                @Html.DropDownListFor(model => model.PaddingBefore, listItems1, "--Minutes--", new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.PaddingBefore, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-2 col-xs-12"></label>
                            <div class="col-md-10 col-xs-12">
                                <div class="input-group">
                                    Processing time will create a free gap after the service that is bookable for other appointments.
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-2 col-md-offset-2 col-xs-12 text-left">Padding after:</label>
                            <div class="col-md-6 col-xs-8">
                                @Html.DropDownListFor(model => model.PaddingAfter, listItems1, "--Minutes--", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.PaddingAfter, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-2 col-md-offset-2 col-xs-12 text-left">Total minutes:</label>
                            <div class="col-md-6 col-xs-12">
                                <div class="input-group">
                                    <span class="input-group-addon fa fa-clock-o"></span>
                                   
                                    @Html.EditorFor(model => model.TotalMinutes, new { htmlAttributes = new { @class = "form-control", @id = "paft", @type = "text", @placeholder = "00:00", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.TotalMinutes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="background-color: #eff0f2; height:2px; width:96%; margin-left: 2%; margin-bottom: 2%;"> </div>

                    <div class="row">
                        <div class="row form-group">
                            <label class="col-md-2 col-xs-12 text-center">Options:</label>
                            <div class="row form-group col-md-8 col-xs-12">
                                <label class="col-md-6 col-xs-8" style="font-weight: normal;">Take several appointments simultaneous:</label>
                                <div class="radio col-md-1 col-xs-2 text-right">
                                    <label>
                                        <input type="radio" name="workingPlaceRadio" onchange="func2()" value="2" checked="">Yes
                                    </label>
                                </div>
                                <div class="radio col-md-1 col-md-offset-1 col-xs-2 text-right mt10">
                                    <label>
                                        <input type="radio" name="workingPlaceRadio" onchange="func1()" value="1">No
                                    </label>
                                </div>
                                @Html.HiddenFor(model => model.SeveralAppointments, new { @id = "SeveralAppointments_Id" })
                            </div>

                        </div>
                        <div class="row form-group" id="maxxxx">
                            <label class="col-md-2 col-xs-12 text-center"></label>
                            <div class="row form-group col-md-8 col-xs-12">
                                <label class="col-md-6 col-xs-8" style="font-weight: normal;">Maximum simultaneous appointments:</label>
                                <div class="col-md-2 col-xs-4">
                                    <div class="input-group">
                                        @*<input id="maxApp" type="number" class="form-control" placeholder="1">*@
                                        @Html.EditorFor(model => model.MaxAppointments, new { htmlAttributes = new { @type = "number", @min = "0", @step = "1", @value = "0", @id = "maxApp", @class = "form-control", @placeholder = "1" } })
                                        @Html.ValidationMessageFor(model => model.MaxAppointments, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div style="background-color: #eff0f2; height:2px; width:96%; margin-left: 2%; margin-bottom: 2%;"> </div>

                    <div class="row">
                        <div class="row form-group">
                            <label class="col-md-4 col-xs-12 text-left">Service Color:<br><span style="font-weight: normal;">Choose a color this service will use on the calendar</span></label>
                            <div class="col-md-5 col-xs-12">
                                @*<input id="colorPick" type="color">*@
                                @Html.EditorFor(model => model.ServiceColor, new { htmlAttributes = new { @type = "color", @id = "colorPick", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.ServiceColor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div style="background-color: #eff0f2; height:2px; width:96%; margin-left: 2%; margin-bottom: 2%;"> </div>

                    <div class="row">
                        <div class="row form-group required">
                            <label class="col-md-2 col-xs-12 text-center control-label">Status:</label>
                            <div class="col-md-8 col-xs-8">
                                @Html.DropDownListFor(model => model.Status, listItems2, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>



                    <br><br><br>
                    <button type="submit" class="btn btn-default col-md-2 col-xs-4 col-md-offset-7 col-xs-offset-2" style="border-radius:3px;">Cancel</button>
                    <button type="submit" class="btn btn-success col-md-2 col-xs-4" style="border-radius:3px; margin-left: 1%">Save</button>
                </div>
            </div>

    </section>
}
    <!-- End: Content -->
    <!-- Begin: Page Footer -->
    <footer id="content-footer" class="affix">
        <div class="row">
            <div class="col-md-6">
                <span class="footer-legal">© 2017 Plateforme RDV</span>
            </div>

        </div>
    </footer>
    <!-- End: Page Footer -->


</section>
<!-- end: Content-Wrapper -->

<!-- Jquery -->

<script src="@Url.Content("~/vendor/jquery/jquery-1.11.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/vendor/jquery/jquery_ui/jquery-ui.min.js")" type="text/javascript"></script>

<script type="text/javascript">

    $(document).ready(function () {

        $("#SeveralAppointments_Id").val(true);
        $("#bookonline_id").val("true");
    });

    function func1() {
        document.getElementById('maxxxx').style.display = "none";
        $("#SeveralAppointments_Id").val(false);
    }
    function func2() {
        document.getElementById('maxxxx').style.display = "block";
        $("#SeveralAppointments_Id").val(true);
    }

    function bookonline()
    {
        alert($("#chk_box_on_id").prop("checked"));
        if ($("#chk_box_on_id").prop("checked") == true)
        {
            $("#bookonline_Id").val("true");
        }
        else if ($("#chk_box_on_id").prop("checked") == false)
        {
            $("#bookonline_id").val(false);
        }
        
    }

</script>
